{"version":3,"sources":["api/api.js","components/Navbar/Navbar.module.css","redux/authReducer.js","reportWebVitals.js","redux/appReducer.js","redux/reduxStore.js","components/Navbar/Navbar.jsx","Logo.js","components/Header/AuthPage/AuthPage.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js","components/Header/AuthPage/AuthPage.module.css","assets/images/preloader.gif","components/Preloader/Preloader.jsx","redux/profileReducer.js","redux/authSelectors.js","redux/dialogsReducer.js","assets/images/yoda.jpeg","utils/objectHelper.js","redux/usersReducer.js","components/Header/Header.module.css","components/Preloader/Preloader.module.css"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","defaultCurrentPage","defaultPageSize","getUsers","currentPage","this","pageSize","get","then","response","data","setFollow","userId","post","setUnfollow","delete","profileAPI","getUserProfile","getStatus","updateStatus","statusText","put","status","authAPI","authMe","login","email","password","rememberMe","logout","module","exports","SET_USER_DATA","SET_USER_INFO","CHANGE_IS_FETCHING","initialState","userInfo","isFetching","isAuth","setAuthUserDataActionCreator","type","payload","setUserInfoActionCreator","changeIsFetchingActionCreator","isFetchingState","authMeThunkCreator","dispatch","a","resultCode","id","updateProfileThunkCreator","setUserProfileActionCreator","loginThunkCreator","console","log","message","messages","length","stopSubmit","_error","logoutThunkCreator","authReducer","state","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","Nav","nav","to","activeClassName","active","nav__link","Logo","src","alt","AuthPage","authUserPhoto","updateUserInfo","onLogout","userImage","yodaImg","s","user__info","onClick","user__photo","user__login","user__logout","login__link","Header","authUser","authComponent","Preloader","user","header","HeaderContainer","props","updateProfileThunk","logoutThunk","React","Component","connect","getIsAuth","userinfo","photos","small","setUserInfo","DialogsContainer","lazy","ProfileContainer","UsersContainer","LoginComponent","App","initializeAppThunk","fallback","path","render","withRouter","ReactDOM","document","getElementById","preloader","preloaderGif","ADD_POST","DELETE_POST","SET_USER_STATUS","SET_USER_PROFILE","postsData","likes","userProfile","userStatus","addPostActionCreator","newPostText","setUserStatusActionCreator","text","statusMessage","setUserProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","filter","ADD_MESSAGE","dialogsData","name","messagesData","addMessageActionCreator","newMessageText","newMessage","updateObjectInArray","item","objectPropName","newObjectProps","map","SET_USERS","FOLLOW","UNFOLLOW","SET_CURRENT_PAGE","SET_TOTAL_USERS","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","followingInProgress","followActionCreator","unfollowActionCreator","currentPageActionCreator","pageNumber","toggleIsFetchingActionCreator","toggleFollowingInProgressActionCreator","getUsersThunkCreator","items","usersNumber","totalCount","followingThunkCreator","following","error","followed"],"mappings":"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","file":"static/js/main.d9286eb5.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"c67a6d78-03b8-4283-aaa1-2235868445fc\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    defaultCurrentPage: 1,\r\n    defaultPageSize: 5,\r\n    instance: instance,\r\n\r\n    /* Функция делает запрос на сервер и возвращает Promise со списками пользователей. Параметрами идут текущая страница пользователей и их максимальное количество на странице */\r\n    getUsers(currentPage = this.defaultCurrentPage, pageSize = this.defaultPageSize) {\r\n        return this.instance\r\n            .get(\r\n                `users?page=${currentPage}&count=${pageSize}`\r\n            )\r\n            .then(response => response.data)\r\n    },\r\n\r\n    /* Функция подписывается на пользователя и возвращает данные об успехе действия. Параметрами идет ID целевого пользователя */\r\n    setFollow(userId) {\r\n        return this.instance\r\n            .post(\r\n                `follow/${userId}`\r\n            )\r\n            .then(response => response.data)\r\n    },\r\n\r\n    /* Функция отписывается на пользователя и возвращает данные об успехе действия. Параметрами идет ID целевого пользователя */\r\n    setUnfollow(userId) {\r\n        return this.instance\r\n            .delete(\r\n                `follow/${userId}`\r\n            )\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    instance: instance,\r\n\r\n    /* Функция делает запрос на сервер и возвращает Promise с данными о профиле пользователя. Параметрами идет ID целевого пользователя */\r\n    getUserProfile(userId) {\r\n        return this.instance\r\n            .get(\r\n                `profile/${userId}`\r\n            )\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId) {\r\n        return this.instance\r\n            .get(\r\n                `profile/status/${userId}`\r\n            )\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(statusText) {\r\n        return this.instance\r\n                        .put(`profile/status`, {status: statusText})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    instance: instance,\r\n    /* Функция автоматически авторизует пользователя на сайте */\r\n    authMe() {\r\n        return this.instance\r\n            .get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return this.instance\r\n            .post(`auth/login`,{email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return this.instance\r\n            .delete(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Kv0T\",\"nav__link\":\"Navbar_nav__link__3jFwb\",\"active\":\"Navbar_active__3KUz9\"};","import { stopSubmit } from \"redux-form\"\r\nimport { authAPI, profileAPI } from \"../api/api\"\r\nimport { setUserProfileActionCreator } from \"./profileReducer\"\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\nconst SET_USER_INFO = 'auth/SET_USER_INFO'\r\nconst CHANGE_IS_FETCHING = 'auth/CHANGE_IS_FETCHING'\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    userInfo: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            \r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        case SET_USER_INFO:\r\n        \r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n        case CHANGE_IS_FETCHING:\r\n    \r\n        return {\r\n            ...state,\r\n            isFetching: action.isFetching\r\n        }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserDataActionCreator = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {userId, email, login, isAuth}\r\n    }\r\n}\r\n\r\nexport const setUserInfoActionCreator = (userInfo) => {\r\n    return {\r\n        type: SET_USER_INFO,\r\n        userInfo\r\n    }\r\n}\r\n\r\nexport const changeIsFetchingActionCreator = (isFetchingState) => {\r\n    return {\r\n        type: CHANGE_IS_FETCHING,\r\n        isFetching: isFetchingState\r\n    }\r\n}\r\n\r\n/* Thunk */\r\n\r\nexport const authMeThunkCreator = () => async (dispatch) => {\r\n    let response = await authAPI.authMe()                                                      //функция посылает запрос на авторизацию пользователя\r\n        \r\n    if(response.resultCode === 0) {                                           //если запрос успешен\r\n        let {id, email, login} = response.data\r\n\r\n        dispatch(setAuthUserDataActionCreator(id, email, login, true))       //вносим данные авторизованного пользователя в state\r\n    }\r\n}\r\n\r\nexport const updateProfileThunkCreator = (id) => (dispatch) => {\r\n    dispatch(changeIsFetchingActionCreator(true))\r\n    profileAPI.getUserProfile(id)                                              //функция посылает запрос о данных профиля\r\n                .then(response => {   \r\n                    dispatch(setUserInfoActionCreator(response))             //вносим данные профиля авторизованного пользователя\r\n                    dispatch(setUserProfileActionCreator(response))          //обновляем данные profilePage на данные авторизованного пользователя\r\n                    dispatch(changeIsFetchingActionCreator(false))\r\n                })\r\n}\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)                                                      \r\n        \r\n    if(response.resultCode === 0) {                                  \r\n        dispatch(authMeThunkCreator())      \r\n    } else {\r\n        console.log(response);\r\n        let message = response.data.messages.length ? response.data.messages.length : \"Wrong email or password\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n        \r\n}\r\n\r\nexport const logoutThunkCreator = () => async (dispatch) => {\r\n    let response = await authAPI.logout()                                                      \r\n        \r\n    if(response.resultCode === 0) {                                 \r\n        dispatch(setAuthUserDataActionCreator(null, null, null, false))      \r\n    }\r\n        \r\n}\r\n\r\nexport default authReducer\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { authMeThunkCreator } from \"./authReducer\"\r\n\r\nconst SET_INITIALIZED = 'app/SET_INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const setInitializedSuccessActionCreator = () => {\r\n    return {\r\n        type: SET_INITIALIZED\r\n    }\r\n}\r\n\r\n\r\n/* Thunk */\r\n\r\nexport const initializeAppThunkCreator = () => async (dispatch) => {\r\n    await dispatch(authMeThunkCreator())\r\n    await dispatch(setInitializedSuccessActionCreator())  \r\n}\r\n\r\n\r\nexport default appReducer\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n}) \r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Nav from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={Nav.nav}>\r\n      <NavLink\r\n        to=\"/profile\"\r\n        activeClassName={Nav.active}\r\n        className={Nav.nav__link}\r\n      >\r\n        Profile\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/dialogs\"\r\n        activeClassName={Nav.active}\r\n        className={Nav.nav__link}\r\n      >\r\n        Messages\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/users\"\r\n        activeClassName={Nav.active}\r\n        className={Nav.nav__link}\r\n      >\r\n        Users\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/music\"\r\n        activeClassName={Nav.active}\r\n        className={Nav.nav__link}\r\n      >\r\n        Music\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/settings\"\r\n        activeClassName={Nav.active}\r\n        className={Nav.nav__link}\r\n      >\r\n        Settings\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { NavLink } from 'react-router-dom'\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <NavLink to='/' className=\"logo\">\r\n            <img className=\"logo__image\" src=\"https://i2.wp.com/www.wanecque.com/wp-content/uploads/2019/08/141-1418031_disneyland-paris-logo-png-transparent-disneyland-paris-logo.png\" alt=\"logo\"/>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default Logo","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport yodaImg from '../../../assets/images/yoda.jpeg'\r\nimport s from './AuthPage.module.css'\r\n\r\nconst AuthPage = ({login, isAuth, userId, authUserPhoto, updateUserInfo, onLogout}) => {\r\n\r\n    let userImage = authUserPhoto ?? yodaImg \r\n\r\n    return (\r\n        <>\r\n        {isAuth \r\n            ? <div className={s.user__info}>\r\n                <NavLink \r\n                  onClick={() => updateUserInfo(userId)} \r\n                  to={`/profile/${userId}`}\r\n                >\r\n                  <img className={s.user__photo} src={userImage} alt=\"user__photo\" />\r\n                </NavLink>\r\n                <div className={s.user__login}>{login}</div>  \r\n                <button \r\n                  type=\"button\" \r\n                  className={s.user__logout}\r\n                  onClick={() => onLogout()}\r\n                  >\r\n                    logout\r\n                  </button>\r\n              </div>\r\n            \r\n            : <div className={s.login}>\r\n                <NavLink to='/login' className={s.login__link}>Login</NavLink>\r\n              </div>\r\n          }\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default AuthPage\r\n\r\n","import React from \"react\";\r\nimport Logo from \"../../Logo\";\r\nimport s from './Header.module.css'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport AuthPage from \"./AuthPage/AuthPage\";\r\n\r\nconst Header = ({login, isAuth, userId, authUser, isFetching, updateUserInfo, authUserPhoto, onLogout}) => {\r\n\r\n  let authComponent = !isFetching ? <AuthPage \r\n                                      login={login} \r\n                                      isAuth={isAuth}\r\n                                      userId={userId}\r\n                                      user={authUser}\r\n                                      updateUserInfo={updateUserInfo}\r\n                                      authUserPhoto={authUserPhoto}\r\n                                      onLogout={onLogout}\r\n                                      /> \r\n                                  : <Preloader />\r\n\r\n \r\n  return (\r\n    <header className={s.header}>\r\n      <Logo />\r\n      {authComponent}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {logoutThunkCreator, setUserInfoActionCreator, updateProfileThunkCreator} from '../../redux/authReducer'\r\nimport { getIsAuth } from \"../../redux/authSelectors\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  /* Функция выводит на экран профиля пользователей данные авторизованного пользователя */\r\n  updateUserInfo = (id) => {\r\n    this.props.updateProfileThunk(id)\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.props.logoutThunk()\r\n  }\r\n\r\n  render(){\r\n    return <Header {...this.props} authUserPhoto={this.props.authUserPhoto} updateUserInfo={this.updateUserInfo} onLogout={this.onLogout} />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    login: state.auth.login,\r\n    isAuth: getIsAuth(state),\r\n    userId: state.auth.userId,\r\n    isFetching: state.auth.isFetching,\r\n    authUserPhoto: state.auth.userinfo?.photos.small\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setUserInfo: setUserInfoActionCreator,\r\n  updateProfileThunk: updateProfileThunkCreator,\r\n  logoutThunk: logoutThunkCreator\r\n})(HeaderContainer)\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Route, Switch, withRouter } from \"react-router\";\n\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n// import LoginComponent from \"./components/Login/LoginComponent\";\n\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeAppThunkCreator } from \"./redux/appReducer\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport { Suspense } from \"react\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\") )\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\") )\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\") )\nconst LoginComponent = React.lazy(() => import(\"./components/Login/LoginComponent\") )\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeAppThunk();\n  }\n  render() {\n\n    if(!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <main className=\"content\">\n          <Suspense fallback={<Preloader />}>\n            <Switch>\n              <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n              <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n              <Route path=\"/users\" render={() => <UsersContainer />} />\n              <Route path=\"/login\" render={() => <LoginComponent />} />\n            </Switch>\n          </Suspense>\n        </main>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, {initializeAppThunk: initializeAppThunkCreator}),\n  withRouter\n  )(App)\n\n","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__info\":\"AuthPage_user__info__lgRey\",\"user__photo\":\"AuthPage_user__photo__1GqgF\",\"login\":\"AuthPage_login__1Kw5M\",\"login__link\":\"AuthPage_login__link__C7tCE\"};","export default __webpack_public_path__ + \"static/media/preloader.816e2b9b.gif\";","import React from 'react'\r\nimport preloaderGif from '../../assets/images/preloader.gif'\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={preloaderGif} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import { profileAPI } from \"../api/api\"\r\n\r\nexport const ADD_POST = 'profilePage/ADD_POST'\r\nexport const DELETE_POST = 'profilePage/DELETE_POST'\r\nexport const SET_USER_STATUS = 'profilePage/SET_USER_STATUS'\r\nexport const SET_USER_PROFILE = 'profilePage/SET_USER_PROFILE'\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, message: \"Hi\", likes: 1 },\r\n        { id: 2, message: \"How are\", likes: 0 },\r\n        { id: 3, message: \"you?\", likes: 12 },\r\n    ],\r\n    userProfile: null,\r\n    userStatus: \"\"\r\n}\r\n\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let post = {\r\n                id: 1 + state.postsData.length,\r\n                message: action.newPostText,\r\n                likes: 0\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, post],\r\n            }\r\n\r\n        case DELETE_POST:\r\n\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(post => post.id !== action.userId),\r\n            }\r\n\r\n        case SET_USER_STATUS:\r\n        \r\n            return {\r\n                ...state,\r\n                userStatus: action.statusMessage\r\n            }\r\n        case SET_USER_PROFILE:\r\n        \r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            }\r\n\r\n        default:\r\n            return state\r\n    } \r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\nexport const deletePostActionCreator = (userId) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const setUserStatusActionCreator = (text) => {\r\n    return {\r\n      type: SET_USER_STATUS,\r\n      statusMessage: text\r\n    }\r\n}\r\n\r\nexport const setUserProfileActionCreator = (userProfile) => {\r\n    return {\r\n      type: SET_USER_PROFILE,\r\n      userProfile\r\n    }\r\n}\r\n\r\n/* Thunk */\r\n\r\nexport const setUserProfileThunkCreator = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getUserProfile(userId)\r\n                    \r\n    dispatch(setUserProfileActionCreator(response))               \r\n}\r\n\r\nexport const getStatusThunkCreator = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n                    \r\n    dispatch(setUserStatusActionCreator(response))         \r\n}\r\n\r\nexport const updateStatusThunkCreator = (statusText) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(statusText)\r\n                    \r\n    if(response.resultCode === 0) {\r\n        dispatch(setUserStatusActionCreator(response.data))\r\n    }             \r\n}\r\n\r\nexport default profileReducer","export const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\n","export const ADD_MESSAGE = 'ADD_MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: \"Denis\" },\r\n        { id: 2, name: \"Andrey\" },\r\n        { id: 3, name: \"Anna\" },\r\n        { id: 4, name: \"Maria\" },\r\n        { id: 5, name: \"Max\" },\r\n    ],\r\n    messagesData: [\r\n        { id: 1, message: \"Hi\" },\r\n        { id: 2, message: \"How are\" },\r\n        { id: 3, message: \"you?\" },\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 1 + state.messagesData.length,\r\n                message: action.newMessageText\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, newMessage],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageText) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageText\r\n    }\r\n}\r\n\r\nexport default dialogsReducer\r\n","export default __webpack_public_path__ + \"static/media/yoda.e1e936ed.jpeg\";","\r\n/*\r\n     Функция-помошник для обновления массива пользователей\r\n    Функция принимает \r\n    1- массив объектов, \r\n    2- свойство для сравнения (ожидается ID),  \r\n    3- имя свойства объекта,  \r\n    4- объект с новыми свойствами, который будет переписывать старые свойства\r\n*/\r\nexport const updateObjectInArray = (item, userId, objectPropName, newObjectProps) => {\r\n    let users = item.map(user => {                                                     //перебирает массив пользователей\r\n        if (user[objectPropName] === userId) {                                         // если objectPropName пользователя совпал с ID, пришедшим в экшене\r\n            return {...user, ...newObjectProps}                                        // переписываем данные пользователя и изменем на пришедшее из параметров\r\n        }\r\n        return user                                                                    // в противном случае возвращаем пользователя без изменений\r\n    })\r\n    return users                                                                       // и возвращаем массив\r\n}","import { usersAPI } from \"../api/api\"\r\nimport { updateObjectInArray } from \"../utils/objectHelper\"\r\n\r\nexport const SET_USERS = 'usersPage/SET_USERS'\r\nexport const FOLLOW = 'usersPage/FOLLOW'\r\nexport const UNFOLLOW = 'usersPage/UNFOLLOW'\r\nexport const SET_CURRENT_PAGE = 'usersPage/SET_CURRENT_PAGE'\r\nexport const SET_TOTAL_USERS = 'usersPage/SET_TOTAL_USERS'\r\nexport const TOGGLE_IS_FETCHING = 'usersPage/TOGGLE_IS_FETCHING'\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'usersPage/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users] \r\n            }\r\n\r\n        case FOLLOW:\r\n\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n        return {\r\n            ...state,\r\n            followingInProgress: action.isFetching                                                             //реализация переключения disabled на кнопке\r\n                                                ? [...state.followingInProgress, action.userId]                // если action.isFetching true, в массив добавляется ID пользователя\r\n                                                : state.followingInProgress.filter(id => id !== action.userId) // если action.isFetching false, из массива удаляется ID пользователя\r\n        }                                                                                                      //в последствии методом some будет возвращаться true в аттрибуте disabled\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n/* Action Creators */\r\nexport const setUsersActionCreator = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const followActionCreator = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const unfollowActionCreator = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const currentPageActionCreator = (pageNumber) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: pageNumber\r\n    }\r\n}\r\n\r\nexport const totalUsersCountActionCreator = (usersNumber) => {\r\n    return {\r\n        type: SET_TOTAL_USERS,\r\n        totalUsersCount: usersNumber\r\n    }\r\n}\r\n\r\nexport const toggleIsFetchingActionCreator = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const toggleFollowingInProgressActionCreator = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\n/* Thunk */\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    \r\n    dispatch(toggleIsFetchingActionCreator(true))\r\n\r\n    const response = await usersAPI.getUsers(currentPage, pageSize)\r\n            \r\n    dispatch(setUsersActionCreator(response.items));\r\n    dispatch(totalUsersCountActionCreator(response.totalCount));\r\n    dispatch(toggleIsFetchingActionCreator(false))\r\n            \r\n    \r\n}\r\n\r\nexport const followingThunkCreator = (following, userId) => async (dispatch) => {\r\n    let response \r\n\r\n    dispatch(toggleFollowingInProgressActionCreator(true, userId))\r\n\r\n    switch (following) {\r\n\r\n        case \"follow\":\r\n            response = await usersAPI.setFollow(userId)                                                    //делается запрпос на сервер о подписке\r\n                        \r\n            if(response.resultCode === 0) {                                                                // если подписка прошла успешно\r\n                dispatch(followActionCreator(userId))                                                      //изменяем данные state в redux на актуальные \r\n            }\r\n            dispatch(toggleFollowingInProgressActionCreator(false, userId))                                //функция удаляет ID пользователя из массив followingInProgress\r\n                         \r\n            break;\r\n\r\n        case \"unfollow\":\r\n\r\n            response = await usersAPI.setUnfollow(userId)                                                      //делается запрпос на сервер об отписке\r\n                        \r\n            if(response.resultCode === 0) {                                                                    // если отписка прошла успешно\r\n                dispatch(unfollowActionCreator(userId))                                                        //изменяем данные state в redux на актуальные \r\n            }\r\n            dispatch(toggleFollowingInProgressActionCreator(false, userId))                                    //функция удаляет ID пользователя из массив followingInProgress\r\n                        \r\n            break;\r\n    \r\n        default:\r\n            console.error(`followingThunkCreator, ошибка в указании параметра ${following}. Возможные параметры: follow, unfollow`);\r\n            break;\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2uxcx\",\"user__info\":\"Header_user__info__AZKOy\",\"user__photo\":\"Header_user__photo__GnFDG\",\"login\":\"Header_login__2zz7Z\",\"login__link\":\"Header_login__link__2aV94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3PlA0\"};"],"sourceRoot":""}